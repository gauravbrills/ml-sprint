demo()
ls()
newVar =2.41
newVar
history()
21+22
plot(newVar)
source('~/.active-rstudio-document')
cls
clear screen
help
my_RStudio_CRAN_data <- read_RStudio_CRAN_data(RStudio_CRAN_data_folder)
source('~/.active-rstudio-document')
my_RStudio_CRAN_data <- read_RStudio_CRAN_data(RStudio_CRAN_data_folder)
RStudio_CRAN_data_folder <- download_RStudio_CRAN_data(START = '2015-08-20', END = '2015-08-20')
RStudio_CRAN_data_folde=\\bangdoc1\temp\R
install.packages('caTools')
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
# Handle missing data in R
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN= function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN= function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
# Encoding categorical Variable
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
dataset = read.csv('Data.csv')
setwd("~/")
setwd("D:/ebcidic/Hadoop/ML/udemy course/Data_Preprocessing/Data_Preprocessing")
# Importing the dataset
dataset = read.csv('Data.csv')
# Handle missing data in R
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN= function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN= function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
# Encoding categorical Variable
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
library(caTools)
set.seed(123)
split = sample.split(dataset$purchased, SplitRatio = 0.8)
View(dataset)
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$purchased, SplitRatio = 4/5)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
training_set = scale(training_set)
training_set = scale(training_set)
test_set = scale(test_set)
View(training_set)
# Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(training_set)
View(training_set)
